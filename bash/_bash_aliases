#!/usr/bin/env bash
# vim: set tabstop=2 shiftwidth=2 foldmethod=marker:

# ~/.profile or ~/.bash_profile read only by interactive shells
# ~/.profile is not read if ~/.bash_profile or ~/.bash_login exists.
# look into the dropbox-only phpenv_phpbuild branch for a sane .bash_profile

export DOTFILESREPO=$(readlink -f "$( dirname "$(readlink -f "${BASH_SOURCE[0]}")")""/..")
. "${DOTFILESREPO}"/bash/_bash_extras
. "${DOTFILESREPO}"/bash/_drush_bashrc
. "${DOTFILESREPO}"/bash/_vim_bash
. "${DOTFILESREPO}"/bash/_git_bash
. "${DOTFILESREPO}"/bash/_fzf_bash

# aliases {{{
alias r='PAGER=less urxvt -e ranger'
alias tmxu=tmux
alias ccat='pygmentize -O style=monokai -f console256 -g'
alias L='less -R'
alias df='df -h'
alias l='ls -CF --group-directories-first'
#alias ll='ls -AlFhrt --group-directories-first'
alias ls='ls --color=auto --group-directories-first'
alias sl=ls
alias fire='firefox -Profilemanager -no-remote &> /dev/null &'
alias t=trans
function cc () {
  local CHROME=google-chrome
  if [ ! -z "$1" ]; then
    local PROFILE_DIR=$1
    local CHROME_ARGS="--user-data-dir=/home/grota/.config/${CHROME}_others/$PROFILE_DIR"
  fi
  local CHROME_ARGS="--password-store=basic $CHROME_ARGS"
  echo "Running: " "$CHROME" "$CHROME_ARGS"
  $CHROME $CHROME_ARGS &> /dev/null &
}
alias pg='ps aux|grep '
alias pw='pwsafe -Eup -l'
alias rstty='stty start undef stop undef'
alias ..="cd ../"
alias ...="cd ../../"
alias ....="cd ../../../"
alias .....="cd ../../../../"
alias ......="cd ../../../../../"
alias cd-="\cd -"
alias cd..="cd ../"
alias cd...="cd ../../"
alias cd....="cd ../../../"
alias cd.....="cd ../../../../"
alias cd......="cd ../../../../../"
alias bc='bc -l'
alias grep='grep --color=always -n --exclude-dir=.svn --exclude-dir=.git '
# there's a ss bin but that's ok for me
alias ss='sudo su -'
# {tl,ll,rl}php log {{{
alias tlphp='tail -F /tmp/php5_apache_errorlog.log'
alias llphp='less /tmp/php5_apache_errorlog.log'
alias rlphp='sudo rm /tmp/php5_apache_errorlog.log'
#}}}
# Acer specific {{{
alias toff='xinput --disable "SynPS/2 Synaptics TouchPad"'
alias ton='xinput --enable "SynPS/2 Synaptics TouchPad"'
alias koff='xinput --disable "AT Translated Set 2 keyboard"'
alias kon='xinput --enable "AT Translated Set 2 keyboard"'
alias don='xrandr --output HDMI1 --auto --right-of LVDS1'
alias doff='xrandr --output HDMI1 --off'
alias auext='pactl set-card-profile 0 output:hdmi-stereo+input:analog-stereo'
alias auint='pactl set-card-profile 0 output:analog-stereo+input:analog-stereo'
#}}}
alias unmute='amixer set "Speaker Front",0 unmute &> /dev/null'
alias mute='amixer set "Speaker Front",0 mute &> /dev/null'
#}}}

# functions {{{
# list of pulseaudio devices can be fetched via pactl list
function rec() {
  if [ -z "$1" ]; then
    echo 'provide an output file'
    return
  fi
  count=2
  while [ $count -gt 0  ]; do
    echo $count ...
    count=$((count - 1))
    sleep 1
  done
  local device=$(pactl list sinks|command grep Monitor\ Source|awk '{ print $3; }')
  gst-launch-1.0 -e pulsesrc device="$device" ! audioconvert ! lamemp3enc target=1 bitrate=128 cbr=true ! filesink location="${1}.mp3"
}
function mkcd() { mkdir -p "$@" && eval cd "\"\$$#\""; }
function fixperms() {
  APACHEUSER=$(ps aux | grep -E '[a]pache|[h]ttpd' | grep -v root | head -1 | cut -d\  -f1)
  sudo setfacl -R -m u:"$APACHEUSER":rwX -m u:"$(whoami)":rwX "$@"
  sudo setfacl -dR -m u:"$APACHEUSER":rwX -m u:"$(whoami)":rwX "$@"
}
function resunity() {
  dbus-send --print-reply --dest=org.freedesktop.compiz /org/freedesktop/compiz/unityshell/screen0/alt_tab_next_window org.freedesktop.compiz.set string:Disabled &> /dev/null
  killall xbindkeys; xbindkeys
  xset r rate 200 90 && xmodmap ~/.Xmodmap
}
#}}}
