#!/usr/bin/env bash
# vim: set tabstop=2 shiftwidth=2 foldmethod=marker:

# ~/.profile or ~/.bash_profile read only by interactive shells
# ~/.profile is not read if ~/.bash_profile or ~/.bash_login exists.
# look into the dropbox-only phpenv_phpbuild branch for a sane .bash_profile

export DOTFILESREPO=$(readlink -f $( dirname $(readlink -f "${BASH_SOURCE[0]}"))"/..")
# source an extra file for non aliases/function stuff
if [ -f ~/.bash_extras ]; then
    . ~/.bash_extras
fi
if [ -f ~/.drush_bashrc ]; then
    . ~/.drush_bashrc
fi
if [ -f ~/.vim_bash ]; then
    . ~/.vim_bash
fi
if [ -f ~/.git_bash ]; then
    . ~/.git_bash
fi
if [ -f ~/.fzf_bash ]; then
    . ~/.fzf_bash
fi

# aliases {{{
alias tmxu=tmux
alias ccat='pygmentize -O style=monokai -f console256 -g'
alias L='less -R'
alias df='df -h'
alias l='ls -CF --group-directories-first'
alias ll='ls -AlFhrt --group-directories-first'
alias ls='ls --color=auto --group-directories-first'
alias sl=ls
alias fire='firefox -Profilemanager -no-remote &> /dev/null &'
alias dk='sudo docker'
alias dkrmc='sudo docker rm $(sudo docker ps -a -q)'
function cc () {
  local CHROME=chromium-browser
  if [ ! -z "$1" ]; then
    local PROFILE_DIR=$1
    local CHROME_ARGS="--user-data-dir=/home/grota/.config/${CHROME}_others/$PROFILE_DIR"
  fi
  local CHROME_ARGS="--password-store=basic $CHROME_ARGS"
  echo "Running: " "$CHROME" "$CHROME_ARGS"
  $CHROME $CHROME_ARGS &> /dev/null &
}
alias pg='ps aux|grep '
alias pw='pwsafe -Eup -l'
alias rstty='stty start undef stop undef'
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias cd..="cd ../"
alias cd...="cd ../.."
alias cd....="cd ../../.."
alias cd.....="cd ../../../.."
alias cd......="cd ../../../../.."
alias bc='bc -l'
alias grep='grep --color=always -n --exclude-dir=.svn --exclude-dir=.git '
# there's a ss bin but that's ok for me
alias ss='sudo su -'
# {tl,ll,rl}php log {{{
alias tlphp='tail -F /tmp/php5_apache_errorlog.log'
alias llphp='less /tmp/php5_apache_errorlog.log'
alias rlphp='sudo rm /tmp/php5_apache_errorlog.log'
#}}}
# Acer specific {{{
alias toff='xinput --disable "SynPS/2 Synaptics TouchPad"'
alias ton='xinput --enable "SynPS/2 Synaptics TouchPad"'
alias koff='xinput --disable "AT Translated Set 2 keyboard"'
alias kon='xinput --enable "AT Translated Set 2 keyboard"'
alias don='xrandr --output HDMI1 --auto --right-of LVDS1'
alias doff='xrandr --output HDMI1 --off'
alias auext='pactl set-card-profile 0 output:hdmi-stereo+input:analog-stereo'
alias auint='pactl set-card-profile 0 output:analog-stereo+input:analog-stereo'
#}}}
alias unmute='amixer set Speaker,0 unmute &> /dev/null ; amixer set Speaker,0 100% &> /dev/null'
#}}}
# see also https://github.com/jahendrie/cheat
function hints() {
cat <<EOF
##################### OLD STUFF #######################
#alias STO='sudo mdadm -S /dev/md0'
#alias STA='sudo mdadm -As /dev/md0'
#####################    HEX    #######################
HEX -> DEC echo \$((0x32))
DEC -> HEX printf '%x\n' 50
##################### SCMBREEZE #######################
c --rebuild to rebuild the cache
##################### CURL ############################
-d form_key=CnbzMWzxaSkQkAJJOZNm POST PARAMS
-H 'Accept: text/html,...' header -H can be repeated
--trace filename To check that all headers/params are ok
-A '...' Sets the user agent
-e 'http://...' referer
################### BASH SCRIPTING ####################
# (( \$# )) || set -- .
# sets \$1=. (useful to set a default for "\$@")
######################## BEETS ########################
# I don't know why this doesn't always work.
beet ls 'artist::^$'
# the following looks into the filesystem (slow)
cd ~/music && find -type f -exec beet info '{}' \; | \grep  ' artist: $'
# should coincide with:
beet write -p
######################## BASH #########################
https://github.com/shawncplus/bash-classes/blob/master/historymanipulation.mkd
!* (all but the 0th)
!:n (n-th component)
!:$ (last component)
!:^ (first component)
!command
<sub>:h (head of sub)
<sub>:t (tail of sub)
<sub>:r (remove .xxx part from substitution)
<sub>:q (quotes)
<sub>:x (break into space separated words and quote)
####################### GIT ###########################
git clean -ndX
git status -s --ignored
####################### TMUX ##########################
prefix+?   list-keys
prefix+C-x list-keys in copy-mode

prefix+/ search
prefix+C-f search files
prefix+C-u search urls
prefix+C-d search digits
prefix+C-g search git-status files

prefix+y copy command to system clipboard
prefix+p paste tmux buffer
prefix+= select tmux buffer to paste

        -- copy mode --
o (other side of selection)

C-o   (xdg-open)
Enter (open with $EDITOR)

  y (copy selection to system clipboard)
M-y (copy selection to system clipboard and paste it)
C-y (add selection only to tmux buffer list and paste it)
#######################################################
EOF
}


# functions {{{
function rec() {
  if [ -z "$1" ]; then
    echo 'provide an output file'
    return
  fi
  count=4
  while [ $count -gt 0  ]; do
    echo $count ...
    count=$(( $count - 1  ))
    sleep 1
  done
  gst-launch-1.0 -e pulsesrc device="alsa_output.pci-0000_00_1b.0.analog-surround-40.monitor" ! audioconvert ! lamemp3enc target=1 bitrate=128 cbr=true ! filesink location="${1}.mp3"
}
function mkcd() { mkdir -p "$@" && eval cd "\"\$$#\""; }
function fixperms() {
  APACHEUSER=`ps aux | \grep -E '[a]pache|[h]ttpd' | \grep -v root | head -1 | cut -d\  -f1`
  sudo setfacl -R -m u:$APACHEUSER:rwX -m u:`whoami`:rwX "$@"
  sudo setfacl -dR -m u:$APACHEUSER:rwX -m u:`whoami`:rwX "$@"
}
#}}}
