$include /etc/inputrc
# bash's bind offers the same functionalities. See `help bind'.
#"\C-xp": dump-functions
#"\C-xz": dump-macros
#"\C-xv": dump-variables
#
# RATIONALE:
# C-hjkl to move between words like C-arrows (h/j=up/down in history)
# M-hl to move left/right charwise like in vim
# C-w M-w to delete WORDS on the left/right of the cursor (space-separated)
# C-d M-d to delete words on the left/right of the cursor
# C-b like backspace

"\C-l": forward-word
"\C-h": backward-word
"\C-k": previous-history
"\C-j": next-history
"\eh":  backward-char
"\el":  forward-char
"\C-f": clear-screen
"\ea":  kill-region
"\ew":  '\e \C-] \ea'
"\C-d": backward-kill-word
"\ek":  kill-line
"\C-b": backward-delete-char
"\eb":  delete-char
# add parameters to the last command
"\C-x\C-x": "\C-p\C-a\e[5C "

# The following was added to cope with fzf, the idea is to call readline's complete
# when tab (C-i) is pressed followed by a redraw-current-line, see:
# http://stackoverflow.com/questions/8366450/complex-keybinding-in-bash
# http://stackoverflow.com/a/19805303/449291
# The problem is caused by ruby's handling of the prompt when using its ncurses stdlib
# This works but we don't use this currently because there's already a workaround
# in the fzf based comspec.
#"\er": redraw-current-line
#"\C-t1": complete
## even if complete is available through \e\e we have to explicitly use another binding (\C-t1 in this case)
#"\C-i": "\C-t1\er"
#
# Idea: readline macro to quote the arguments:
# It can move to the beginning of the line like C-xC-x does,
# plant a quote, move to the end and plant another

# Defaults {{{
# M-t, C-t transpose words/chars
# C-r, C-s reverse/forward search history
# C-g abort searches
# M-S-3 comments line (i.e. M-#)
# C-u kill backwards
# M-d kill-word

# defaults overridden
# C-f, C-b move by one char at a time
# C-k kill-line

"\e[A": history-search-backward
"\e[B": history-search-forward

# unused
# C-M-h M-BS backward-kill-word
# M-f, M-b move by one word like C-Left/Right.
# }}}

set mark-symlinked-directories on
set match-hidden-files on
set show-all-if-ambiguous on
set visible-stats on
set skip-completed-text on
set completion-ignore-case on
$if Bash
$endif

# performs bash's HISTORY EXPANSION.
# Use it on the cli in after !^ !$ !* !:1 !:2 !:3 !:0
# Can also use !-2 to retrieve the next-to-last line in full.
# And pick its pieces with !-2:0 (0 means first token)
Control-Space: magic-space

# tmux configuration
$if term=screen-256color
"\eOC": forward-word
"\eOD": backward-word
$endif
