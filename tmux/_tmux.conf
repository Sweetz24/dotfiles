# vim: set tabstop=2 shiftwidth=2 foldmethod=marker:

# TMUX DEFAULTS {{{

# vi-copy mappings
# C-d C-u : f F t T HLM C-f C-b C-e C-y
# C-Up C-Down

# emacs-edit mappings
# C-d (delete) C-k (delete till-EOL)
# C-a C-e
# C-w C-y
# M-b M-f

# { swap-pane -U
# } swap-pane -D
# space next-layout
# q display-panes
# , rename-window

# }}}

# initialization {{{
set -g prefix C-a
set -g default-terminal "screen-256color"
set -g status-utf8 on
set -g set-titles on
set -g set-titles-string '[#I] #W'
set -g set-clipboard off
setw -g window-status-current-format '«#I: #W»'
setw -g window-status-format ' #I: #W '
setw -g automatic-rename on
setw -g window-status-attr bold
# time after which the -r (repeat) in bind -r expires. keep it short.
set -g repeat-time 300
setw -g monitor-activity on
# don't bug me with a message
set -g visual-activity off
# like 'timeout' for vim. Just the default.
set -sg escape-time 500
set -g mode-keys vi
set -g history-limit 10000
# windows/panes start with 1
set -g base-index 1
setw -g pane-base-index 1
# C-a C-a sends a normal C-a through
unbind C-b
bind C-a send-prefix
# status
set -g status-justify centre
set -g status-left-length 40
# not very much useful for now
#status-right ""#22T" %H:%M %d-%b-%y"
#setw -g xterm-keys on
#terminal-overrides ""
set -g status-position top
# }}}

# emacs-edit mappings {{{
# use emacs mode on tmux commandline
set -g status-keys emacs
bind -t emacs-edit C-Left previous-word
bind -t emacs-edit C-Right next-word-end
# }}}

# vi-copy mappings {{{
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind -t vi-copy "'" jump-again
unbind -t vi-copy '\;'
bind -t vi-copy '\;' jump-reverse
bind -t vi-copy "M-'" end-of-line
bind -t vi-copy "M-\\;" back-to-indentation
bind -t vi-copy "Home" start-of-line
bind -t vi-copy "End" end-of-line
# }}}

# wsad mappings {{{
unbind -t vi-copy w
bind -t vi-copy w cursor-up
bind -t vi-copy s cursor-down
bind -t vi-copy a cursor-left
bind -t vi-copy d cursor-right
unbind -t vi-copy Left
bind -t vi-copy Left previous-word
bind -t vi-copy Right next-word
# }}}

# r, /, C-o, easy tmux devel mode {{{
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind / list-keys -t vi-copy
bind C-o show-options -g
# }}}

# integration with clipboard and primary selection {{{

# C:   save into system clipboard (+).
bind C run "tmux save-buffer - | xclip -i -sel clipboard" \; run "tmux display \"Clipboard \(+\) filled with: $(tmux save-buffer - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
# C-c: save into system clipboard (+). With preselection.
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

unbind D
# D:   save into selection clipboard (*).
bind D run "tmux save-buffer - | xclip -i" \; run "tmux display \"Clipboard \(*\) filled with: $(tmux save-buffer - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
# C-d: save into selection clipboard (*). With preselection.
bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-f: copy from * clipboard.
bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

#}}}

# window mappings {{{
unbind %
unbind '"'
unbind "'"
unbind l
bind | split-window -h
bind \ split-window -h
bind v split-window -h
bind - split-window -v
bind -r H resize-pane -L 15
bind -r J resize-pane -D 15
bind -r K resize-pane -U 15
bind -r L resize-pane -R 15
unbind \;
bind \; last-window
unbind s
bind S choose-session
bind s split-window -v
bind C-n next-window
bind C-p previous-window
# }}}

# pane mappings {{{
unbind o
bind Tab select-pane -t :.+
bind BTab select-pane -t :.+
# pane focus and restore
bind o new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
bind O last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R
bind "'" last-pane
# }}}

# mouse {{{
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
# }}}

# colors {{{
# status bar (51=light blue 233=very dark grey)
set -g status-fg colour51
set -g status-bg colour236
# windows listing in the status bar
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg colour18
setw -g window-status-current-attr bright
set -g window-status-activity-fg cyan
set -g window-status-activity-bg colour238
set -g window-status-activity-attr dim
# highlighting of pane borders
set -g pane-active-border-fg white
set -g pane-active-border-bg colour17
set -g pane-border-fg white
# messages
set -g message-bg colour135
# }}}
